

/*
   callbacks.cpp -- part of the Basic project.
   Implementation of callbacks -- YOUR code goes here!
   Pat Deegan
   Psychogenic http://devicedruid.com

   Copyright (C) 2017 Pat Deegan

   Generated by DruidBuilder [https://devicedruid.com/],
   as part of project "a0883ee49bc54e8cbaab40d0f94ce1756TXZKE4vNm",
   aka Basic.

   Druid4Arduino, Device Druid, Druid Builder, the builder
   code brewery and its wizards, SerialUI and supporting
   libraries, as well as the generated parts of this program
   are
              Copyright (C) 2013-2017 Pat Deegan
   [http://psychogenic.com/ | http://flyingcarsandstuff.com/]
   and distributed under the terms of their respective licenses.
   See http://devicedruid.com for details.


   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
   PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE,
   YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR
   CORRECTION.

   Keep in mind that there is no warranty and you are solely
   responsible for the use of all these cool tools.

   Play safe, have fun.

*/


/* we need the SerialUI lib */
#include <SerialUI.h>
#include "BasicSettings.h"

/* our project specific types and functions are here */
#include "Basic.h"



/*
   In addition to any custom globals you declared,
   here you have access to:

 * *** MySUI -- the SerialUI instance.
   Use it as you would the Serial device, e.g.
  	MySUI.println(F("Helloooo..."));


 * *** MyInputs -- a container for
   values submitted by users. Contents:

      MyInputs.Custom (long int)



 * *** MyTracked -- a container for values tracked
   by druid and displayed to users in "state" pane.  Changes to:

      MyTracked.ClickCount (unsigned long)

   will automatically be reported to the UI, on the next refresh/ping.


*/






/* ********* callbacks and validation functions ********* */



/* *** Main *** */
namespace Main {


void doDetails() {
  // output some info
  MySUI.println(F("Super basic example... manage and track a click counter"));
  MySUI.print(F("The counter is currently at:"));
  MySUI.println(MyTracked.ClickCount);

}

void doIncrementClicks() {
  MyTracked.ClickCount ++;

}






/* *** Main -> Manage *** */
namespace Manage {


void doReset() {
  MyTracked.ClickCount = 0;
}

bool CustomIsOk(long int& newVal) {
  // we'll limit this to 1000, for no particular reason
  if (newVal > 1000)
  {
    return false;
  }

  // otherwise, whatever the value, it's OK
  return true;
}

void CustomChanged() {
  // the value has been changed, so let's update the tracker
  // accordingly

  MyTracked.ClickCount = MyInputs.Custom;

}




} /* namespace Manage */



} /* namespace Main */





